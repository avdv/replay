name: "Test"
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  test-package:
    name: Build & Run (package)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.1.0
    - uses: cachix/install-nix-action@v17
      with:
        nix_path: nixpkgs=./nix/nixpkgs.nix
    - uses: cachix/cachix-action@v10
      with:
        name: cbley
        extraPullNames: pre-commit-hooks
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        # Only needed for private caches
        #authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix flake check
    - run: nix build --print-build-logs
    - run: nix run . -- --help

  test-shell:
    name: Build & Run (shell)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3.1.0
    - uses: cachix/install-nix-action@v17
      with:
        nix_path: nixpkgs=./nix/nixpkgs.nix
    - uses: cachix/cachix-action@v10
      with:
        name: cbley
        extraPullNames: pre-commit-hooks
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        # Only needed for private caches
        #authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Set up BuildBuddy
      env:
        BUILDBUDDY_API_KEY: '${{ secrets.BUILDBUDDY_API_KEY }}'
      run: |
        cat > .bazelrc.local <<EOF
        startup --max_idle_secs=5
        common --config=ci
        build --remote_header=x-buildbuddy-api-key=$BUILDBUDDY_API_KEY
        EOF
        cat > ~/.netrc <<EOF
        machine api.github.com
                password ${{ secrets.GITHUB_TOKEN }}
        EOF
    - run: nix flake check
    - run: nix develop --command bazel build  //:replay
    - run: nix develop --command bazel run -- //:replay --help

