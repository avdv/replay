name: "Test"
on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main
jobs:
  test-package:
    name: Build & Run (package)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.0
      with:
        persist-credentials: false
    - uses: cachix/install-nix-action@v29
      with:
        nix_path: nixpkgs=./nix/nixpkgs.nix
    - uses: cachix/cachix-action@v15
      with:
        name: cbley
        extraPullNames: pre-commit-hooks
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        # Only needed for private caches
        #authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - run: nix flake check
    - run: nix develop --command .github/update-hash replay.deps
    - name: Update PR
      id: update_pr
      uses: gr2m/create-or-update-pull-request-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.PR_TOKEN || 'token-not-set' }}
      with:
        author: "bot <bot@users.noreply.github.com>"
        commit-message: "Update replay.deps hash"
        branch: ${{ github.head_ref }}
        update-pull-request-title-and-body: false
    - run: exit 1
      if: ${{ steps.update_pr.outputs.result != 'unchanged' }}
    - run: nix build --print-build-logs
    - run: nix run . -- --help

  test-shell:
    name: Build & Run (shell)
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4.2.0
    - uses: cachix/install-nix-action@v29
      with:
        nix_path: nixpkgs=./nix/nixpkgs.nix
    - uses: cachix/cachix-action@v15
      with:
        name: cbley
        extraPullNames: pre-commit-hooks
        signingKey: '${{ secrets.CACHIX_SIGNING_KEY }}'
        # Only needed for private caches
        #authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
    - name: Set up BuildBuddy
      env:
        BUILDBUDDY_API_KEY: '${{ secrets.BUILDBUDDY_API_KEY }}'
      run: |
        if [ -z "$BUILDBUDDY_API_KEY" ]; then
          cache_setting='build --noremote_upload_local_results'
        else
          cache_setting="build --remote_header=x-buildbuddy-api-key=$BUILDBUDDY_API_KEY"
        fi
        cat > .bazelrc.local <<EOF
        startup --max_idle_secs=5
        common --config=ci
        $cache_setting
        EOF
        cat > ~/.netrc <<EOF
        machine api.github.com
                password ${{ secrets.GITHUB_TOKEN }}
        EOF
    - run: nix develop --command bazel build ...
    - run: nix develop --command bazel run -- //:replay --help

